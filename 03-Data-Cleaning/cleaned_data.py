# -*- coding: utf-8 -*-
"""cleaned_data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kVPC48hlwMd7q8pHaUeKm7SvdUT4lWw5
"""

# Commented out IPython magic to ensure Python compatibility.
#Importing Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

#to display plots inline
# %matplotlib inline

from google.colab import drive

# Mount Google Drive
drive.mount('/content/gdrive')

# Access your dataset
data_path = '/content/gdrive/My Drive/Colab Notebooks/Sales Trends Analysis Project/raw_dataset.csv'

df = pd.read_csv(data_path)
# Display the first few rows of the DataFrame
df.head()

df.info()

df.describe()

# Check for missing values
print(df.isnull().sum())

df.dropna(subset=['Description'], inplace=True)
df.dropna(subset=['Customer_Id'], inplace=True)

# Check for missing values
print(df.isnull().sum())

df.describe()

df['Invoice_date'] = pd.to_datetime(df['Invoice_date'])

df.drop_duplicates(inplace=True)

df.describe()

df = df[(df['Quantity'] > 0) & (df['Price'] > 0)]

df.describe()

df.head()

# Checking unique values for anomalies
df['StockCode'].unique()

# Checking unique countries
df['Country'].unique()

# Visualize Outliers

import matplotlib.pyplot as plt

plt.figure(figsize=(12, 6))

# Boxplot for Quantity
plt.subplot(1, 2, 1)
df.boxplot(column=['Quantity'])
plt.title('Boxplot for Quantity')

# Boxplot for Price
plt.subplot(1, 2, 2)
df.boxplot(column=['Price'])
plt.title('Boxplot for Price')

plt.show()

# Removing outliers beyond 99th percentile
df = df[df['Quantity'] < df['Quantity'].quantile(0.99)]
df = df[df['Price'] < df['Price'].quantile(0.99)]

# Detect and Handle Anomalies

# Keeping only positive quantities
df = df[df['Quantity'] > 0]

# Keeping only positive prices
df = df[df['Price'] > 0]

# Checking for anomalies in categorical columns
print(df['Country'].value_counts())
print(df['StockCode'].value_counts())

# Check for remaining missing values
print(df.isnull().sum())

# Ensure all data types are correct
print(df.dtypes)

df.describe()

# saving the cleaned data set

cleaned_data_path = '/content/gdrive/My Drive/Colab Notebooks/Sales Trends Analysis Project/cleaned_dataset.csv'
df.to_csv(cleaned_data_path, index=False)